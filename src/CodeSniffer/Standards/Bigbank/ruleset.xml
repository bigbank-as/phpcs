<?xml version="1.0"?>
<!-- A custom code standard / code sniffer ruleset for phpcs -->
<!-- API-187 -->
<ruleset name="BIGBANK">

    <description>A custom coding standard for BIGBANK projects</description>

    <exclude-pattern type="relative">^/vendor/*</exclude-pattern>

    <!-- Include the whole PSR-2 standard as a base reference-->
    <rule ref="PSR2">

        <!-- Allow method and property names to begin with an underscore -->
        <exclude name="PSR2.Methods.MethodDeclaration.Underscore"/>
        <exclude name="PSR2.Classes.PropertyDeclaration.Underscore"/>

        <!-- Allow brace to be on the same line on class/function declaration -->
        <exclude name="PSR2.Classes.ClassDeclaration.OpenBraceNewLine"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine"/>

    </rule>

    <!-- In addition to the base coding standard, include some other helpful sniffs -->

    <!-- A PHP file must not end with a closing tag (?>) -->
    <rule ref="Zend.Files.ClosingTag"/>

    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>

    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>

    <!-- Checks that the opening brace of a function is on the same line as the function declaration -->
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>

    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>

    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>

    <!-- Throws an error or warning when any code prefixed with an asperand is encountered -->
    <rule ref="Generic.PHP.NoSilencedErrors"/>

</ruleset>